{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCpBA,eA0CA,SAASQ,GAAqB,UAACC,GAAY,IAE1C,MAAMC,EAAiDC,EAAOC,UAAUC,iBAAiB,iBACnFC,EAAMJ,EAAgBK,IAAmB,eAC/C,GAAW,MAAPD,EACH,MAAO,GAER,GAAkB,GAAdA,EAAIE,OACP,MAAO,GAGR,MACMC,EADM,yCACUC,KAAKJ,EAAI,IAC/B,OAAiB,MAAbG,EACI,GAEa,KAAhBA,EAAU,GACVR,GAEHC,EAAgBS,OAAO,cAAc,CAAEF,EAAU,GAAGA,EAAU,GAAIH,EAAI,IAAMH,EAAOS,oBAAoBC,QAChG,QAED,OAEHZ,GAEHC,EAAgBS,OAAO,cAAc,CAAEF,EAAU,GAAG,IAAIA,EAAU,GAAIH,EAAI,IAAMH,EAAOS,oBAAoBC,QACpG,QAED,MAET,CAEA,SAASC,EAAgBC,EAA2BC,GAEhB,WAA/BD,EAAOE,SAASC,IAAIC,SAEW,SAA/BJ,EAAOE,SAASG,WAIpBJ,EAAOK,OAHNL,EAAOM,OAIT,CAhFA,oBAAyBC,GAGxB,MAAMP,EAASb,EAAOqB,OAAOC,oBAC1BtB,EAAOuB,mBAAmBC,MAC1B,GAEHX,EAAOY,QAAU,gCACjBZ,EAAOa,QAAU,oBACjBb,EAAOc,KAAO,aAAa9B,EAAqB,CAAC,GACjDuB,EAAQQ,cAAcC,KAAKhB,GAC3BA,EAAOK,OAGP,IAAIY,EAAe9B,EAAOqB,OAAOU,iBAC1BD,GACAnB,EAAgBmB,EAAcjB,GAElCb,EAAOqB,OAAOW,6BAA4BpB,IACtCkB,EAAelB,EACXkB,GACAnB,EAAgBmB,EAAcjB,E,IAKzCb,EAAOiC,SAASC,gBAAgB,iCAAiC,KAEhE,MAAMC,EAAQtC,EAAqB,CAACC,WAAW,IACjC,KAAVqC,EAIJtB,EAAOc,KAAO,aAAaQ,EAH1BtB,EAAOK,MAGwB,GAGlC,EA+CA,wBAA8B,C","sources":["webpack://local-ext-hsp3debugwin/external commonjs \"vscode\"","webpack://local-ext-hsp3debugwin/webpack/bootstrap","webpack://local-ext-hsp3debugwin/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// now active! - Set HSP3DebugWinButton\n\tconst button = vscode.window.createStatusBarItem(\n\t  \tvscode.StatusBarAlignment.Right, \n\t  \t0\n\t);\n\tbutton.command = 'vscode-ext.toggleHsp3DebugWin';\n\tbutton.tooltip = 'Debugウィンドウ表示設定トグル';\n\tbutton.text = 'DebugWin: '+GetStateHSP3DebugWin({});\n\tcontext.subscriptions.push(button);\n\tbutton.hide();\n\n\t// on TabChange! => button.show()/hide();\n\tlet activeEditor = vscode.window.activeTextEditor;\n    if (activeEditor) {\n        detectTabChange(activeEditor, button);\n    }\n    vscode.window.onDidChangeActiveTextEditor(editor => {\n        activeEditor = editor;\n        if (activeEditor) {\n            detectTabChange(activeEditor, button);\n        }\n    });\n\n\t// Command : toggleHsp3DebugWin\n\tvscode.commands.registerCommand('vscode-ext.toggleHsp3DebugWin', () => {\n\t\t// andToggle => \"language-hsp3.runCommands\" -w ON/OFF\n\t\tconst state = GetStateHSP3DebugWin({andToggle: true});\n\t\tif (state === \"\"){\n\t\t\tbutton.hide();\n\t\t\treturn;\n\t\t}\n\t\tbutton.text = 'DebugWin: '+state;\n\t});\n\t\n}\n\nfunction GetStateHSP3DebugWin({andToggle = false} : {andToggle?:boolean}){\n\t// thanks language-hsp3!\n\tconst extensionConfig: vscode.WorkspaceConfiguration = vscode.workspace.getConfiguration('language-hsp3');\n\tconst arr = extensionConfig.get<Array<string>>(\"runCommands\");\n\tif (arr == null){\n\t\treturn \"\";\n\t}\n\tif (arr.length != 2){\n\t\treturn \"\";\n\t}\n\t\n\tconst reg = /^(.*?\\-[A-RT-Za-np-vx-z0-9]*)(w?)(.*$)/;\n\tconst divOption = reg.exec(arr[0]);\n\tif (divOption == null){\n\t\treturn \"\";\n\t}\n\tif ( divOption[2] == \"w\" ){\n\t\tif (andToggle){\n\t\t\t// Forced update!\n\t\t\textensionConfig.update(\"runCommands\",[ divOption[1]+divOption[3], arr[1] ], vscode.ConfigurationTarget.Global);\n\t\t\treturn \"hide\";\n\t\t}\n\t\treturn \"show\";\n\t}else {\n\t\tif (andToggle){\n\t\t\t// Forced update!\n\t\t\textensionConfig.update(\"runCommands\",[ divOption[1]+\"w\"+divOption[3], arr[1] ], vscode.ConfigurationTarget.Global);\n\t\t\treturn \"show\";\n\t\t}\n\t\treturn \"hide\";\n\t}\n}\n\nfunction detectTabChange(editor: vscode.TextEditor, button: vscode.StatusBarItem) {\n\t\n\tif (editor.document.uri.scheme === \"output\")\n\t\treturn;\n\tif (editor.document.languageId === \"hsp3\"){\n\t\tbutton.show();\n\t\treturn;\n\t}\n\tbutton.hide();\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","GetStateHSP3DebugWin","andToggle","extensionConfig","vscode","workspace","getConfiguration","arr","get","length","divOption","exec","update","ConfigurationTarget","Global","detectTabChange","editor","button","document","uri","scheme","languageId","hide","show","context","window","createStatusBarItem","StatusBarAlignment","Right","command","tooltip","text","subscriptions","push","activeEditor","activeTextEditor","onDidChangeActiveTextEditor","commands","registerCommand","state"],"sourceRoot":""}